{
  "addonName": "envoy",
  "version": "v1.27.1",
  "releaseDate": "2023-10-11",
  "notes": [
    {
      "label": ["kind/feature" , "impact/medium"],
      "text": "Added a runtime flag http.max_requests_per_io_cycle to set the limit on the number of HTTP requests processed from a single connection in a single I/O cycle. Requests exceeding this limit are processed in subsequent cycles, mitigating CPU starvation by allowing requests from other connections to progress. This value can be set to 1 for abusive HTTP/2 or HTTP/3 connections. By default, this limit is disabled."
    },
    {
      "label": ["kind/breaking-change", "kind/upgrade-consideration", "impact/high"],
      "text": "Modified behavior to close HTTP/2 and HTTP/3 connections that prematurely reset streams. The runtime key overload.premature_reset_min_stream_lifetime_seconds determines the interval (default 1 second) for considering a stream reset as premature. The key overload.premature_reset_total_stream_count (default 500) sets the number of requests needed before applying the premature reset check. Connections are disconnected if more than 50% of resets are considered premature. This check can be completely disabled by setting envoy.restart_features.send_goaway_for_premature_rst_streams to false."
    },
    {
      "label": ["kind/bug-fix", "impact/medium"],
      "text": "Fixed a use-after-free bug in the connection limit filter."
    },
    {
      "label": ["kind/bug-fix", "impact/medium"],
      "text": "Fixed a bug in TLS where the handshake could fail when both a private key provider and certificate validation were set."
    }
  ]
}